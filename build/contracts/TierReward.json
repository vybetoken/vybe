{
  "contractName": "TierReward",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tier",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRewardType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRewardType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tier\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/nanoissuperior/vybe/contracts/TierReward.sol\":\"TierReward\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"/Users/nanoissuperior/vybe/contracts/TierReward.sol\":{\"keccak256\":\"0xd145d4ed48d65e5692cc989b6153c5a79724839f676b91576fc01b385e9f3f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f50c521a643cc8c5151238a8581ffb9479e2d85ef563f87dfb1325d03de175\",\"dweb:/ipfs/QmZAnWSDsBaGqXXxJfnnnc1aL2xUDa6i9qcdLTmU4w5GND\"]},\"node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"node_modules/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x9318ff369c73a09ddb4d18153ca28064ca736e7cc116325b2fc7c1301d66b0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://373bf598a9af2fb7812a46bf4fc58b193d0083f54b5bf5890c72bd3b4ee1b8c3\",\"dweb:/ipfs/QmTTmzi4YtxuoQMRVAPCuNT5ybGLXWq52rFoyb33EZaPJP\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x29ff2fb043d5a07d672fd9659cca8e4ac5fe2184b53e715fd0d504b2ccd7d658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e43ea11d6c7b8b5100d72c2d5b8034ec746e9993de890251ed4723d9375c8a6\",\"dweb:/ipfs/QmRFeXGbE24ghuorZLXMHfFmSFtcyZ7wy11M4vfYhV26Ri\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xab1016471a1e40286bebc32b6117101d920774e59664f7c153f70d4cc8e13d72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://128a321026c783435db60668a2f0da2acaa9adc0da5e25bcfbb8aceec51e7ddc\",\"dweb:/ipfs/QmVyPwEfyafjfdRDdKvst3YuHyeomhxdTkRnkzDt9cJ5t5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x6b98e7e7edc91d467b62f2fdcd798edead3409bf95295abefd358dccd396dba9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b151bfccc7f350304679f54639c6467cd4887418d953fd1cd5d53ab57b45174\",\"dweb:/ipfs/QmZdqXBbmXwAARiS2V4cQpUddoFuHCqvRuknnstq1whRZ9\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x321ee37ef4925020aa818a03ec7fe48e057561f65ab009a84f6c20c86026ade7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f9d74a17a56024984251b97e428e24c9d3abffbae5bd290f0ec263c82e9694\",\"dweb:/ipfs/QmRryCuuXu2ukrDmatB8TqdEhPLiK6NBRt41RiPUaX1qKy\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"node_modules/@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e\",\"dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh\"]},\"node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969\",\"dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600b553480156200001657600080fd5b50604080518082018252601081526f159e589948151a595c8814995dd85c9960821b60208083019190915282518084019093526006835265149155d0549160d21b90830152906200006e6301ffc9a760e01b620000d8565b8151620000839060069060208501906200015d565b508051620000999060079060208401906200015d565b50620000ac6380ac58cd60e01b620000d8565b620000be635b5e139f60e01b620000d8565b620000d063780e9d6360e01b620000d8565b5050620001f9565b6001600160e01b0319808216141562000138576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a057805160ff1916838001178555620001d0565b82800160010185558215620001d0579182015b82811115620001d0578251825591602001919060010190620001b3565b50620001de929150620001e2565b5090565b5b80821115620001de5760008155600101620001e3565b611c0180620002096000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80634f6ccce7116100ad578063a22cb46511610071578063a22cb46514610393578063b88d4fde146103c1578063c87b56dd14610487578063e985e9c5146104a4578063f2577e2d146104d257610121565b80634f6ccce7146103235780636352211e146103405780636c0360eb1461035d57806370a082311461036557806395d89b411461038b57610121565b806318160ddd116100f457806318160ddd1461024557806323b872dd1461025f5780632f745c591461029557806340c10f19146102c157806342842e0e146102ed57610121565b806301ffc9a71461012657806306fdde0314610161578063081812fc146101de578063095ea7b314610217575b600080fd5b61014d6004803603602081101561013c57600080fd5b50356001600160e01b0319166104ef565b604080519115158252519081900360200190f35b610169610512565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a357818101518382015260200161018b565b50505050905090810190601f1680156101d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fb600480360360208110156101f457600080fd5b50356105a8565b604080516001600160a01b039092168252519081900360200190f35b6102436004803603604081101561022d57600080fd5b506001600160a01b03813516906020013561060a565b005b61024d6106e5565b60408051918252519081900360200190f35b6102436004803603606081101561027557600080fd5b506001600160a01b038135811691602081013590911690604001356106f6565b61024d600480360360408110156102ab57600080fd5b506001600160a01b03813516906020013561074d565b610243600480360360408110156102d757600080fd5b506001600160a01b038135169060200135610778565b6102436004803603606081101561030357600080fd5b506001600160a01b0381358116916020810135909116906040013561079e565b61024d6004803603602081101561033957600080fd5b50356107b9565b6101fb6004803603602081101561035657600080fd5b50356107cf565b6101696107f7565b61024d6004803603602081101561037b57600080fd5b50356001600160a01b0316610858565b6101696108c0565b610243600480360360408110156103a957600080fd5b506001600160a01b0381351690602001351515610921565b610243600480360360808110156103d757600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561041257600080fd5b82018360208201111561042457600080fd5b8035906020019184600183028401116401000000008311171561044657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a26945050505050565b6101696004803603602081101561049d57600080fd5b5035610a84565b61014d600480360360408110156104ba57600080fd5b506001600160a01b0381358116916020013516610d2b565b610169600480360360208110156104e857600080fd5b5035610d59565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b5050505050905090565b60006105b382610df8565b6105ee5760405162461bcd60e51b815260040180806020018281038252602c815260200180611af6602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610615826107cf565b9050806001600160a01b0316836001600160a01b031614156106685760405162461bcd60e51b8152600401808060200182810382526021815260200180611b7a6021913960400191505060405180910390fd5b806001600160a01b031661067a610e05565b6001600160a01b0316148061069b575061069b81610696610e05565b610d2b565b6106d65760405162461bcd60e51b8152600401808060200182810382526038815260200180611a496038913960400191505060405180910390fd5b6106e08383610e09565b505050565b60006106f16002610e84565b905090565b610707610701610e05565b82610e8f565b6107425760405162461bcd60e51b8152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b6106e0838383610f33565b6001600160a01b038216600090815260016020526040812061076f908361107f565b90505b92915050565b600b8054600101908190556000818152600a602052604090208290556106e0838261108b565b6106e083838360405180602001604052806000815250610a26565b6000806107c76002846111b9565b509392505050565b600061077282604051806060016040528060298152602001611aab60299139600291906111d5565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b60006001600160a01b03821661089f5760405162461bcd60e51b815260040180806020018281038252602a815260200180611a81602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061077290610e84565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b610929610e05565b6001600160a01b0316826001600160a01b0316141561098f576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061099c610e05565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556109e0610e05565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610a37610a31610e05565b83610e8f565b610a725760405162461bcd60e51b8152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b610a7e848484846111ec565b50505050565b6060610a8f82610df8565b610aca5760405162461bcd60e51b815260040180806020018281038252602f815260200180611b4b602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610b5f5780601f10610b3457610100808354040283529160200191610b5f565b820191906000526020600020905b815481529060010190602001808311610b4257829003601f168201915b505060095493945050505060026000196101006001841615020190911604610b8857905061050d565b805115610c59576009816040516020018083805460018160011615610100020316600290048015610bf05780601f10610bce576101008083540402835291820191610bf0565b820191906000526020600020905b815481529060010190602001808311610bdc575b5050825160208401908083835b60208310610c1c5780518252601f199092019160209182019101610bfd565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061050d565b6009610c648461123e565b6040516020018083805460018160011615610100020316600290048015610cc25780601f10610ca0576101008083540402835291820191610cc2565b820191906000526020600020905b815481529060010190602001808311610cae575b5050825160208401908083835b60208310610cee5780518252601f199092019160209182019101610ccf565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600a60205260409020546060906001811415610d9857505060408051808201909152600681526539b4b63b32b960d11b602082015261050d565b8060021415610dc357505060408051808201909152600481526319dbdb1960e21b602082015261050d565b8060031415610df2575050604080518082019091526008815267706c6174696e756d60c01b602082015261050d565b50919050565b6000610772600283611319565b3390565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610e4b826107cf565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061077282611325565b6000610e9a82610df8565b610ed55760405162461bcd60e51b815260040180806020018281038252602c815260200180611a1d602c913960400191505060405180910390fd5b6000610ee0836107cf565b9050806001600160a01b0316846001600160a01b03161480610f1b5750836001600160a01b0316610f10846105a8565b6001600160a01b0316145b80610f2b5750610f2b8185610d2b565b949350505050565b826001600160a01b0316610f46826107cf565b6001600160a01b031614610f8b5760405162461bcd60e51b8152600401808060200182810382526029815260200180611b226029913960400191505060405180910390fd5b6001600160a01b038216610fd05760405162461bcd60e51b81526004018080602001828103825260248152602001806119f96024913960400191505060405180910390fd5b610fdb8383836106e0565b610fe6600082610e09565b6001600160a01b03831660009081526001602052604090206110089082611329565b506001600160a01b038216600090815260016020526040902061102b9082611335565b5061103860028284611341565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061076f8383611357565b6001600160a01b0382166110e6576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6110ef81610df8565b15611141576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61114d600083836106e0565b6001600160a01b038216600090815260016020526040902061116f9082611335565b5061117c60028284611341565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008080806111c886866113bb565b9097909650945050505050565b60006111e2848484611436565b90505b9392505050565b6111f7848484610f33565b61120384848484611500565b610a7e5760405162461bcd60e51b81526004018080602001828103825260328152602001806119c76032913960400191505060405180910390fd5b60608161126357506040805180820190915260018152600360fc1b602082015261050d565b8160005b811561127b57600101600a82049150611267565b60608167ffffffffffffffff8111801561129457600080fd5b506040519080825280601f01601f1916602001820160405280156112bf576020820181803683370190505b50859350905060001982015b831561131057600a840660300160f81b828280600190039350815181106112ee57fe5b60200101906001600160f81b031916908160001a905350600a840493506112cb565b50949350505050565b600061076f8383611668565b5490565b600061076f8383611680565b600061076f8383611746565b60006111e284846001600160a01b038516611790565b815460009082106113995760405162461bcd60e51b81526004018080602001828103825260228152602001806119a56022913960400191505060405180910390fd5b8260000182815481106113a857fe5b9060005260206000200154905092915050565b8154600090819083106113ff5760405162461bcd60e51b8152600401808060200182810382526022815260200180611ad46022913960400191505060405180910390fd5b600084600001848154811061141057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816114d15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561149657818101518382015260200161147e565b50505050905090810190601f1680156114c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106114e457fe5b9060005260206000209060020201600101549150509392505050565b6000611514846001600160a01b0316611827565b61152057506001610f2b565b606061162e630a85bd0160e11b611535610e05565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561159c578181015183820152602001611584565b50505050905090810190601f1680156115c95780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050506040518060600160405280603281526020016119c7603291396001600160a01b038816919061182d565b9050600081806020019051602081101561164757600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b6000818152600183016020526040812054801561173c57835460001980830191908101906000908790839081106116b357fe5b90600052602060002001549050808760000184815481106116d057fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061170057fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610772565b6000915050610772565b60006117528383611668565b61178857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610772565b506000610772565b6000828152600184016020526040812054806117f55750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556111e5565b8285600001600183038154811061180857fe5b90600052602060002090600202016001018190555060009150506111e5565b3b151590565b60606111e28484600085606061184285611827565b611893576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106118d25780518252601f1990920191602091820191016118b3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611934576040519150601f19603f3d011682016040523d82523d6000602084013e611939565b606091505b5091509150811561194d579150610f2b9050565b80511561195d5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561149657818101518382015260200161147e56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220d063ad0aaae5993bf243feb997573c9b0fd214587b177b53914182d2c90cd6ca64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80634f6ccce7116100ad578063a22cb46511610071578063a22cb46514610393578063b88d4fde146103c1578063c87b56dd14610487578063e985e9c5146104a4578063f2577e2d146104d257610121565b80634f6ccce7146103235780636352211e146103405780636c0360eb1461035d57806370a082311461036557806395d89b411461038b57610121565b806318160ddd116100f457806318160ddd1461024557806323b872dd1461025f5780632f745c591461029557806340c10f19146102c157806342842e0e146102ed57610121565b806301ffc9a71461012657806306fdde0314610161578063081812fc146101de578063095ea7b314610217575b600080fd5b61014d6004803603602081101561013c57600080fd5b50356001600160e01b0319166104ef565b604080519115158252519081900360200190f35b610169610512565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a357818101518382015260200161018b565b50505050905090810190601f1680156101d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fb600480360360208110156101f457600080fd5b50356105a8565b604080516001600160a01b039092168252519081900360200190f35b6102436004803603604081101561022d57600080fd5b506001600160a01b03813516906020013561060a565b005b61024d6106e5565b60408051918252519081900360200190f35b6102436004803603606081101561027557600080fd5b506001600160a01b038135811691602081013590911690604001356106f6565b61024d600480360360408110156102ab57600080fd5b506001600160a01b03813516906020013561074d565b610243600480360360408110156102d757600080fd5b506001600160a01b038135169060200135610778565b6102436004803603606081101561030357600080fd5b506001600160a01b0381358116916020810135909116906040013561079e565b61024d6004803603602081101561033957600080fd5b50356107b9565b6101fb6004803603602081101561035657600080fd5b50356107cf565b6101696107f7565b61024d6004803603602081101561037b57600080fd5b50356001600160a01b0316610858565b6101696108c0565b610243600480360360408110156103a957600080fd5b506001600160a01b0381351690602001351515610921565b610243600480360360808110156103d757600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561041257600080fd5b82018360208201111561042457600080fd5b8035906020019184600183028401116401000000008311171561044657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a26945050505050565b6101696004803603602081101561049d57600080fd5b5035610a84565b61014d600480360360408110156104ba57600080fd5b506001600160a01b0381358116916020013516610d2b565b610169600480360360208110156104e857600080fd5b5035610d59565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b5050505050905090565b60006105b382610df8565b6105ee5760405162461bcd60e51b815260040180806020018281038252602c815260200180611af6602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610615826107cf565b9050806001600160a01b0316836001600160a01b031614156106685760405162461bcd60e51b8152600401808060200182810382526021815260200180611b7a6021913960400191505060405180910390fd5b806001600160a01b031661067a610e05565b6001600160a01b0316148061069b575061069b81610696610e05565b610d2b565b6106d65760405162461bcd60e51b8152600401808060200182810382526038815260200180611a496038913960400191505060405180910390fd5b6106e08383610e09565b505050565b60006106f16002610e84565b905090565b610707610701610e05565b82610e8f565b6107425760405162461bcd60e51b8152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b6106e0838383610f33565b6001600160a01b038216600090815260016020526040812061076f908361107f565b90505b92915050565b600b8054600101908190556000818152600a602052604090208290556106e0838261108b565b6106e083838360405180602001604052806000815250610a26565b6000806107c76002846111b9565b509392505050565b600061077282604051806060016040528060298152602001611aab60299139600291906111d5565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b60006001600160a01b03821661089f5760405162461bcd60e51b815260040180806020018281038252602a815260200180611a81602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061077290610e84565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b610929610e05565b6001600160a01b0316826001600160a01b0316141561098f576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061099c610e05565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556109e0610e05565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610a37610a31610e05565b83610e8f565b610a725760405162461bcd60e51b8152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b610a7e848484846111ec565b50505050565b6060610a8f82610df8565b610aca5760405162461bcd60e51b815260040180806020018281038252602f815260200180611b4b602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610b5f5780601f10610b3457610100808354040283529160200191610b5f565b820191906000526020600020905b815481529060010190602001808311610b4257829003601f168201915b505060095493945050505060026000196101006001841615020190911604610b8857905061050d565b805115610c59576009816040516020018083805460018160011615610100020316600290048015610bf05780601f10610bce576101008083540402835291820191610bf0565b820191906000526020600020905b815481529060010190602001808311610bdc575b5050825160208401908083835b60208310610c1c5780518252601f199092019160209182019101610bfd565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061050d565b6009610c648461123e565b6040516020018083805460018160011615610100020316600290048015610cc25780601f10610ca0576101008083540402835291820191610cc2565b820191906000526020600020905b815481529060010190602001808311610cae575b5050825160208401908083835b60208310610cee5780518252601f199092019160209182019101610ccf565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600a60205260409020546060906001811415610d9857505060408051808201909152600681526539b4b63b32b960d11b602082015261050d565b8060021415610dc357505060408051808201909152600481526319dbdb1960e21b602082015261050d565b8060031415610df2575050604080518082019091526008815267706c6174696e756d60c01b602082015261050d565b50919050565b6000610772600283611319565b3390565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610e4b826107cf565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061077282611325565b6000610e9a82610df8565b610ed55760405162461bcd60e51b815260040180806020018281038252602c815260200180611a1d602c913960400191505060405180910390fd5b6000610ee0836107cf565b9050806001600160a01b0316846001600160a01b03161480610f1b5750836001600160a01b0316610f10846105a8565b6001600160a01b0316145b80610f2b5750610f2b8185610d2b565b949350505050565b826001600160a01b0316610f46826107cf565b6001600160a01b031614610f8b5760405162461bcd60e51b8152600401808060200182810382526029815260200180611b226029913960400191505060405180910390fd5b6001600160a01b038216610fd05760405162461bcd60e51b81526004018080602001828103825260248152602001806119f96024913960400191505060405180910390fd5b610fdb8383836106e0565b610fe6600082610e09565b6001600160a01b03831660009081526001602052604090206110089082611329565b506001600160a01b038216600090815260016020526040902061102b9082611335565b5061103860028284611341565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061076f8383611357565b6001600160a01b0382166110e6576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6110ef81610df8565b15611141576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61114d600083836106e0565b6001600160a01b038216600090815260016020526040902061116f9082611335565b5061117c60028284611341565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008080806111c886866113bb565b9097909650945050505050565b60006111e2848484611436565b90505b9392505050565b6111f7848484610f33565b61120384848484611500565b610a7e5760405162461bcd60e51b81526004018080602001828103825260328152602001806119c76032913960400191505060405180910390fd5b60608161126357506040805180820190915260018152600360fc1b602082015261050d565b8160005b811561127b57600101600a82049150611267565b60608167ffffffffffffffff8111801561129457600080fd5b506040519080825280601f01601f1916602001820160405280156112bf576020820181803683370190505b50859350905060001982015b831561131057600a840660300160f81b828280600190039350815181106112ee57fe5b60200101906001600160f81b031916908160001a905350600a840493506112cb565b50949350505050565b600061076f8383611668565b5490565b600061076f8383611680565b600061076f8383611746565b60006111e284846001600160a01b038516611790565b815460009082106113995760405162461bcd60e51b81526004018080602001828103825260228152602001806119a56022913960400191505060405180910390fd5b8260000182815481106113a857fe5b9060005260206000200154905092915050565b8154600090819083106113ff5760405162461bcd60e51b8152600401808060200182810382526022815260200180611ad46022913960400191505060405180910390fd5b600084600001848154811061141057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816114d15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561149657818101518382015260200161147e565b50505050905090810190601f1680156114c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106114e457fe5b9060005260206000209060020201600101549150509392505050565b6000611514846001600160a01b0316611827565b61152057506001610f2b565b606061162e630a85bd0160e11b611535610e05565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561159c578181015183820152602001611584565b50505050905090810190601f1680156115c95780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050506040518060600160405280603281526020016119c7603291396001600160a01b038816919061182d565b9050600081806020019051602081101561164757600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b6000818152600183016020526040812054801561173c57835460001980830191908101906000908790839081106116b357fe5b90600052602060002001549050808760000184815481106116d057fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061170057fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610772565b6000915050610772565b60006117528383611668565b61178857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610772565b506000610772565b6000828152600184016020526040812054806117f55750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556111e5565b8285600001600183038154811061180857fe5b90600052602060002090600202016001018190555060009150506111e5565b3b151590565b60606111e28484600085606061184285611827565b611893576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106118d25780518252601f1990920191602091820191016118b3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611934576040519150601f19603f3d011682016040523d82523d6000602084013e611939565b606091505b5091509150811561194d579150610f2b9050565b80511561195d5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561149657818101518382015260200161147e56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220d063ad0aaae5993bf243feb997573c9b0fd214587b177b53914182d2c90cd6ca64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "97:730:7:-:0;;;265:1;247:19;;133:60;;;;;;;;;-1:-1:-1;3976:365:18;;;;;;;;;;;-1:-1:-1;;;3976:365:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3976:365:18;;;;;751:40:15;-1:-1:-1;;;751:18:15;:40::i;:::-;4048:12:18;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;4070:16:18;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;4174:40:18;-1:-1:-1;;;4174:18:18;:40::i;:::-;4224:49;-1:-1:-1;;;4224:18:18;:49::i;:::-;4283:51;-1:-1:-1;;;4283:18:18;:51::i;:::-;3976:365;;97:730:7;;1482:198:15;-1:-1:-1;;;;;;1565:25:15;;;;;1557:66;;;;;-1:-1:-1;;;1557:66:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1633:33:15;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1633:40:15;1669:4;1633:40;;;1482:198::o;97:730:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;97:730:7;;;-1:-1:-1;97:730:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "97:730:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:140:15;;;;;;;;;;;;;;;;-1:-1:-1;948:140:15;-1:-1:-1;;;;;;948:140:15;;:::i;:::-;;;;;;;;;;;;;;;;;;4897:90:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7504:209;;;;;;;;;;;;;;;;-1:-1:-1;7504:209:18;;:::i;:::-;;;;-1:-1:-1;;;;;7504:209:18;;;;;;;;;;;;;;7062:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7062:381:18;;;;;;;;:::i;:::-;;6572:200;;;:::i;:::-;;;;;;;;;;;;;;;;8352:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8352:300:18;;;;;;;;;;;;;;;;;:::i;6349:152::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6349:152:18;;;;;;;;:::i;273:177:7:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;273:177:7;;;;;;;;:::i;8718:149:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8718:149:18;;;;;;;;;;;;;;;;;:::i;6844:161::-;;;;;;;;;;;;;;;;-1:-1:-1;6844:161:18;;:::i;4668:167::-;;;;;;;;;;;;;;;;-1:-1:-1;4668:167:18;;:::i;6183:87::-;;;:::i;4400:211::-;;;;;;;;;;;;;;;;-1:-1:-1;4400:211:18;-1:-1:-1;;;;;4400:211:18;;:::i;5051:94::-;;;:::i;7780:290::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7780:290:18;;;;;;;;;;:::i;8933:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8933:282:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8933:282:18;;-1:-1:-1;8933:282:18;;-1:-1:-1;;;;;8933:282:18:i;5211:740::-;;;;;;;;;;;;;;;;-1:-1:-1;5211:740:18;;:::i;8136:154::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8136:154:18;;;;;;;;;;:::i;524:301:7:-;;;;;;;;;;;;;;;;-1:-1:-1;524:301:7;;:::i;948:140:15:-;-1:-1:-1;;;;;;1048:33:15;;1025:4;1048:33;;;;;;;;;;;;;948:140;;;;:::o;4897:90:18:-;4975:5;4968:12;;;;;;;;-1:-1:-1;;4968:12:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4943:13;;4968:12;;4975:5;;4968:12;;4975:5;4968:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4897:90;:::o;7504:209::-;7572:7;7599:16;7607:7;7599;:16::i;:::-;7591:73;;;;-1:-1:-1;;;7591:73:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7682:24:18;;;;:15;:24;;;;;;-1:-1:-1;;;;;7682:24:18;;7504:209::o;7062:381::-;7142:13;7158:16;7166:7;7158;:16::i;:::-;7142:32;;7198:5;-1:-1:-1;;;;;7192:11:18;:2;-1:-1:-1;;;;;7192:11:18;;;7184:57;;;;-1:-1:-1;;;7184:57:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7276:5;-1:-1:-1;;;;;7260:21:18;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7260:21:18;;:62;;;;7285:37;7302:5;7309:12;:10;:12::i;:::-;7285:16;:37::i;:::-;7252:152;;;;-1:-1:-1;;;7252:152:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7415:21;7424:2;7428:7;7415:8;:21::i;:::-;7062:381;;;:::o;6572:200::-;6625:7;6744:21;:12;:19;:21::i;:::-;6737:28;;6572:200;:::o;8352:300::-;8511:41;8530:12;:10;:12::i;:::-;8544:7;8511:18;:41::i;:::-;8503:103;;;;-1:-1:-1;;;8503:103:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8617:28;8627:4;8633:2;8637:7;8617:9;:28::i;6349:152::-;-1:-1:-1;;;;;6464:20:18;;6438:7;6464:20;;;:13;:20;;;;;:30;;6488:5;6464:23;:30::i;:::-;6457:37;;6349:152;;;;;:::o;273:177:7:-;344:7;;;354:1;344:11;334:21;;;;-1:-1:-1;397:10:7;;;:5;:10;;;;;:17;;;425:18;431:6;344:11;425:5;:18::i;8718:149:18:-;8821:39;8838:4;8844:2;8848:7;8821:39;;;;;;;;;;;;:16;:39::i;6844:161::-;6911:7;;6952:22;:12;6968:5;6952:15;:22::i;:::-;-1:-1:-1;6930:44:18;6844:161;-1:-1:-1;;;6844:161:18:o;4668:167::-;4732:7;4758:70;4775:7;4758:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;6183:87::-;6255:8;6248:15;;;;;;;;-1:-1:-1;;6248:15:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6223:13;;6248:15;;6255:8;;6248:15;;6255:8;6248:15;;;;;;;;;;;;;;;;;;;;;;;;4400:211;4464:7;-1:-1:-1;;;;;4491:19:18;;4483:74;;;;-1:-1:-1;;;4483:74:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4575:20:18;;;;;;:13;:20;;;;;:29;;:27;:29::i;5051:94::-;5131:7;5124:14;;;;;;;;-1:-1:-1;;5124:14:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5099:13;;5124:14;;5131:7;;5124:14;;5131:7;5124:14;;;;;;;;;;;;;;;;;;;;;;;;7780:290;7894:12;:10;:12::i;:::-;-1:-1:-1;;;;;7882:24:18;:8;-1:-1:-1;;;;;7882:24:18;;;7874:62;;;;;-1:-1:-1;;;7874:62:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;7992:8;7947:18;:32;7966:12;:10;:12::i;:::-;-1:-1:-1;;;;;7947:32:18;;;;;;;;;;;;;;;;;-1:-1:-1;7947:32:18;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7947:53:18;;;;;;;;;;;8030:12;:10;:12::i;:::-;-1:-1:-1;;;;;8015:48:18;;8054:8;8015:48;;;;;;;;;;;;;;;;;;;;7780:290;;:::o;8933:282::-;9064:41;9083:12;:10;:12::i;:::-;9097:7;9064:18;:41::i;:::-;9056:103;;;;-1:-1:-1;;;9056:103:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9169:39;9183:4;9189:2;9193:7;9202:5;9169:13;:39::i;:::-;8933:282;;;;:::o;5211:740::-;5276:13;5309:16;5317:7;5309;:16::i;:::-;5301:76;;;;-1:-1:-1;;;5301:76:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5414:19;;;;:10;:19;;;;;;;;;5388:45;;;;;;-1:-1:-1;;5388:45:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5414:19;5388:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5512:8:18;5506:22;5388:45;;-1:-1:-1;;;;5506:22:18;-1:-1:-1;;5506:22:18;;;;;;;;;;;5502:74;;5556:9;-1:-1:-1;5549:16:18;;5502:74;5678:23;;:27;5674:110;;5752:8;5762:9;5735:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5735:37:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5735:37:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5721:52;;;;;5674:110;5914:8;5924:18;:7;:16;:18::i;:::-;5897:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5897:46:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5897:46:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5883:61;;;5211:740;;;:::o;8136:154::-;-1:-1:-1;;;;;8248:25:18;;;8225:4;8248:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8136:154::o;524:301:7:-;606:12;621:10;;;:5;:10;;;;;;581:13;;654:1;646:9;;642:177;;;-1:-1:-1;;671:15:7;;;;;;;;;;;;-1:-1:-1;;;671:15:7;;;;;;642:177;707:4;715:1;707:9;703:116;;;-1:-1:-1;;732:13:7;;;;;;;;;;;;-1:-1:-1;;;732:13:7;;;;;;703:116;766:4;774:1;766:9;762:57;;;-1:-1:-1;;791:17:7;;;;;;;;;;;;-1:-1:-1;;;791:17:7;;;;;;762:57;524:301;;;;:::o;10649:117:18:-;10706:4;10729:30;:12;10751:7;10729:21;:30::i;590:104:14:-;677:10;590:104;:::o;16305:155:18:-;16370:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;16370:29:18;-1:-1:-1;;;;;16370:29:18;;;;;;;;:24;;16423:16;16370:24;16423:7;:16::i;:::-;-1:-1:-1;;;;;16414:39:18;;;;;;;;;;;16305:155;;:::o;7023:121:24:-;7092:7;7118:19;7126:3;7118:7;:19::i;10924:329:18:-;11009:4;11033:16;11041:7;11033;:16::i;:::-;11025:73;;;;-1:-1:-1;;;11025:73:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11108:13;11124:16;11132:7;11124;:16::i;:::-;11108:32;;11169:5;-1:-1:-1;;;;;11158:16:18;:7;-1:-1:-1;;;;;11158:16:18;;:51;;;;11202:7;-1:-1:-1;;;;;11178:31:18;:20;11190:7;11178:11;:20::i;:::-;-1:-1:-1;;;;;11178:31:18;;11158:51;:87;;;;11213:32;11230:5;11237:7;11213:16;:32::i;:::-;11150:96;10924:329;-1:-1:-1;;;;10924:329:18:o;13918:559::-;14035:4;-1:-1:-1;;;;;14015:24:18;:16;14023:7;14015;:16::i;:::-;-1:-1:-1;;;;;14015:24:18;;14007:78;;;;-1:-1:-1;;;14007:78:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14103:16:18;;14095:65;;;;-1:-1:-1;;;14095:65:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14171:39;14192:4;14198:2;14202:7;14171:20;:39::i;:::-;14272:29;14289:1;14293:7;14272:8;:29::i;:::-;-1:-1:-1;;;;;14312:19:18;;;;;;:13;:19;;;;;:35;;14339:7;14312:26;:35::i;:::-;-1:-1:-1;;;;;;14357:17:18;;;;;;:13;:17;;;;;:30;;14379:7;14357:21;:30::i;:::-;-1:-1:-1;14398:29:18;:12;14415:7;14424:2;14398:16;:29::i;:::-;;14462:7;14458:2;-1:-1:-1;;;;;14443:27:18;14452:4;-1:-1:-1;;;;;14443:27:18;;;;;;;;;;;13918:559;;;:::o;7649:135:25:-;7720:7;7754:22;7758:3;7770:5;7754:3;:22::i;12482:393:18:-;-1:-1:-1;;;;;12561:16:18;;12553:61;;;;;-1:-1:-1;;;12553:61:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12633:16;12641:7;12633;:16::i;:::-;12632:17;12624:58;;;;;-1:-1:-1;;;12624:58:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;12693:45;12722:1;12726:2;12730:7;12693:20;:45::i;:::-;-1:-1:-1;;;;;12749:17:18;;;;;;:13;:17;;;;;:30;;12771:7;12749:21;:30::i;:::-;-1:-1:-1;12790:29:18;:12;12807:7;12816:2;12790:16;:29::i;:::-;-1:-1:-1;12835:33:18;;12860:7;;-1:-1:-1;;;;;12835:33:18;;;12852:1;;12835:33;;12852:1;;12835:33;12482:393;;:::o;7472:224:24:-;7552:7;;;;7611:22;7615:3;7627:5;7611:3;:22::i;:::-;7580:53;;;;-1:-1:-1;7472:224:24;-1:-1:-1;;;;;7472:224:24:o;8115:202::-;8222:7;8264:44;8269:3;8289;8295:12;8264:4;:44::i;:::-;8256:53;-1:-1:-1;8115:202:24;;;;;;:::o;10077:269:18:-;10190:28;10200:4;10206:2;10210:7;10190:9;:28::i;:::-;10236:48;10259:4;10265:2;10269:7;10278:5;10236:22;:48::i;:::-;10228:111;;;;-1:-1:-1;;;10228:111:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;202:723:26;258:13;475:10;471:51;;-1:-1:-1;501:10:26;;;;;;;;;;;;-1:-1:-1;;;501:10:26;;;;;;471:51;546:5;531:12;585:75;592:9;;585:75;;617:8;;647:2;639:10;;;;585:75;;;669:19;701:6;691:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;691:17:26;-1:-1:-1;761:5:26;;-1:-1:-1;669:39:26;-1:-1:-1;;;734:10:26;;776:112;783:9;;776:112;;849:2;842:4;:9;837:2;:14;826:27;;808:6;815:7;;;;;;;808:15;;;;;;;;;;;:45;-1:-1:-1;;;;;808:45:26;;;;;;;;-1:-1:-1;875:2:26;867:10;;;;776:112;;;-1:-1:-1;911:6:26;202:723;-1:-1:-1;;;;202:723:26:o;6791:149:24:-;6875:4;6898:35;6908:3;6928;6898:9;:35::i;4483:108::-;4565:19;;4483:108::o;6764:135:25:-;6834:4;6857:35;6865:3;6885:5;6857:7;:35::i;6467:129::-;6534:4;6557:32;6562:3;6582:5;6557:4;:32::i;6239:174:24:-;6328:4;6351:55;6356:3;6376;-1:-1:-1;;;;;6390:14:24;;6351:4;:55::i;4423:201:25:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:25;;;;-1:-1:-1;;;4509:73:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;4934:274:24:-;5037:19;;5001:7;;;;5037:27;-1:-1:-1;5029:74:24;;;;-1:-1:-1;;;5029:74:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5114:22;5139:3;:12;;5152:5;5139:19;;;;;;;;;;;;;;;;;;5114:44;;5176:5;:10;;;5188:5;:12;;;5168:33;;;;;4934:274;;;;;:::o;5615:315::-;5709:7;5747:17;;;:12;;;:17;;;;;;5797:12;5782:13;5774:36;;;;-1:-1:-1;;;5774:36:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5863:3;:12;;5887:1;5876:8;:12;5863:26;;;;;;;;;;;;;;;;;;:33;;;5856:40;;;5615:315;;;;;:::o;15710:589:18:-;15830:4;15855:15;:2;-1:-1:-1;;;;;15855:13:18;;:15::i;:::-;15850:58;;-1:-1:-1;15893:4:18;15886:11;;15850:58;15917:23;15943:246;-1:-1:-1;;;16054:12:18;:10;:12::i;:::-;16080:4;16098:7;16119:5;15959:175;;;;;;-1:-1:-1;;;;;15959:175:18;;;;;;-1:-1:-1;;;;;15959:175:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15959:175:18;;;;;;;-1:-1:-1;;;;;15959:175:18;;;;;;;;;;;15943:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15943:15:18;;;:246;:15;:246::i;:::-;15917:272;;16199:13;16226:10;16215:32;;;;;;;;;;;;;;;-1:-1:-1;16215:32:18;-1:-1:-1;;;;;;16265:26:18;-1:-1:-1;;;16265:26:18;;-1:-1:-1;;;15710:589:18;;;;;;:::o;4270:123:24:-;4341:4;4364:17;;;:12;;;;;:17;;;;;;:22;;;4270:123::o;2183:1512:25:-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:25;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;1611:404;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:25;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:25;1986:12;;1828:678:24;1904:4;2037:17;;;:12;;;:17;;;;;;2069:13;2065:435;;-1:-1:-1;;2153:38:24;;;;;;;;;;;;;;;;;;2135:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2347:19;;2327:17;;;:12;;;:17;;;;;;;:39;2380:11;;2065:435;2458:5;2422:3;:12;;2446:1;2435:8;:12;2422:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2484:5;2477:12;;;;;718:413:23;1078:20;1116:8;;;718:413::o;3573:194::-;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;5050;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;-1:-1:-1;;;5074:60:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:12;5219:23;5246:6;-1:-1:-1;;;;;5246:11:23;5266:8;5277:4;5246:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5246:36:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;-1:-1:-1;5319:17:23;;-1:-1:-1;5319:17:23;5292:580;5437:17;;:21;5433:429;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5827:20;;-1:-1:-1;;;5827:20:23;;;;;;;;;;;;;;;;;5834:12;;5827:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract TierReward is ERC721 {\n    constructor() public ERC721(\"Vybe Tier Reward\", \"REWARD\") {}\n\n    mapping(uint256 => uint256) private _type;\n\n    uint256 counter = 0;\n\n    function mint(address staker, uint256 tier) public {\n        counter = counter + 1;\n        uint256 _id = counter;\n\n        _type[_id] = tier;\n\n        _mint(staker, _id);\n    }\n\n    function burn(uint256 _id) private {\n        _burn(_id);\n    }\n\n    function getRewardType(uint256 _id) public view returns (string memory) {\n        uint256 tier = _type[_id];\n\n        if (tier == 1) {\n            return \"silver\";\n        } else if (tier == 2) {\n            return \"gold\";\n        } else if (tier == 3) {\n            return \"platinum\";\n        }\n    }\n}\n// SPDX-License-Identifier: MIT\n",
  "sourcePath": "/Users/nanoissuperior/vybe/contracts/TierReward.sol",
  "ast": {
    "absolutePath": "/Users/nanoissuperior/vybe/contracts/TierReward.sol",
    "exportedSymbols": {
      "TierReward": [
        450
      ]
    },
    "id": 451,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 357,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 358,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 4266,
        "src": "25:70:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4265,
              "src": "120:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$4265",
                "typeString": "contract ERC721"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "120:6:7"
          }
        ],
        "contractDependencies": [
          3069,
          3126,
          3138,
          4265,
          4381,
          4412,
          4439
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 450,
        "linearizedBaseContracts": [
          450,
          4265,
          4412,
          4439,
          4381,
          3126,
          3138,
          3069
        ],
        "name": "TierReward",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "191:2:7",
              "statements": []
            },
            "documentation": null,
            "id": 368,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "56796265205469657220526577617264",
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "161:18:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ec699e81333e4c1e7467212ee259e7f446c74c89119654e0434f076bf9aa899a",
                      "typeString": "literal_string \"Vybe Tier Reward\""
                    },
                    "value": "Vybe Tier Reward"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "524557415244",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "181:8:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0b9821ae606ebc7c79bf3390bdd3dc93e1b4a7cda27aad60646e7b88ff55b001",
                      "typeString": "literal_string \"REWARD\""
                    },
                    "value": "REWARD"
                  }
                ],
                "id": 365,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 362,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4265,
                  "src": "154:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$4265_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "154:36:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "144:2:7"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "191:0:7"
            },
            "scope": 450,
            "src": "133:60:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 372,
            "mutability": "mutable",
            "name": "_type",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 450,
            "src": "199:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 371,
              "keyType": {
                "id": 369,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "207:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "199:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 370,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "218:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 375,
            "mutability": "mutable",
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 450,
            "src": "247:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 373,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "265:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "324:126:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 382,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "334:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "344:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "354:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "344:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "334:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "334:21:7"
                },
                {
                  "assignments": [
                    389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 403,
                      "src": "365:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "365:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 390,
                    "name": "counter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 375,
                    "src": "379:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "365:21:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "397:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 394,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "403:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "397:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 395,
                      "name": "tier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "410:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "397:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "397:17:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "431:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "439:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4001,
                      "src": "425:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "425:18:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "287:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "tier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "303:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:30:7"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:7"
            },
            "scope": 450,
            "src": "273:177:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "491:27:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "507:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 409,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4069,
                      "src": "501:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "501:10:7"
                }
              ]
            },
            "documentation": null,
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 414,
                  "src": "470:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:13:7"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:7"
            },
            "scope": 450,
            "src": "456:62:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "596:229:7",
              "statements": [
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "tier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 448,
                      "src": "606:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "606:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 423,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "621:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 425,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "627:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "621:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "606:25:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 427,
                      "name": "tier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "646:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "654:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "646:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 433,
                        "name": "tier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "707:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "707:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 439,
                          "name": "tier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "766:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "774:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "766:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 445,
                      "nodeType": "IfStatement",
                      "src": "762:57:7",
                      "trueBody": {
                        "id": 444,
                        "nodeType": "Block",
                        "src": "777:42:7",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "706c6174696e756d",
                              "id": 442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "798:10:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7749953d30ad88f23f2f55efe2bcdfb045daa5bca71ff6e111ac0a86deea29e6",
                                "typeString": "literal_string \"platinum\""
                              },
                              "value": "platinum"
                            },
                            "functionReturnParameters": 420,
                            "id": 443,
                            "nodeType": "Return",
                            "src": "791:17:7"
                          }
                        ]
                      }
                    },
                    "id": 446,
                    "nodeType": "IfStatement",
                    "src": "703:116:7",
                    "trueBody": {
                      "id": 438,
                      "nodeType": "Block",
                      "src": "718:38:7",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "676f6c64",
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "739:6:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a827b848d338b362a9edc3f5d9143a504828207dd0d1d6515b2b3968154d59b0",
                              "typeString": "literal_string \"gold\""
                            },
                            "value": "gold"
                          },
                          "functionReturnParameters": 420,
                          "id": 437,
                          "nodeType": "Return",
                          "src": "732:13:7"
                        }
                      ]
                    }
                  },
                  "id": 447,
                  "nodeType": "IfStatement",
                  "src": "642:177:7",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "657:40:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "73696c766572",
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "678:8:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f941acc7a280b509da22820f4cfa02d757f6c3c7f9a8aa70c32c18152fa9a488",
                            "typeString": "literal_string \"silver\""
                          },
                          "value": "silver"
                        },
                        "functionReturnParameters": 420,
                        "id": 431,
                        "nodeType": "Return",
                        "src": "671:15:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f2577e2d",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardType",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 449,
                  "src": "547:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "546:13:7"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 449,
                  "src": "581:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "580:15:7"
            },
            "scope": 450,
            "src": "524:301:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 451,
        "src": "97:730:7"
      }
    ],
    "src": "0:860:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/nanoissuperior/vybe/contracts/TierReward.sol",
    "exportedSymbols": {
      "TierReward": [
        450
      ]
    },
    "id": 451,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 357,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 358,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 4266,
        "src": "25:70:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4265,
              "src": "120:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$4265",
                "typeString": "contract ERC721"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "120:6:7"
          }
        ],
        "contractDependencies": [
          3069,
          3126,
          3138,
          4265,
          4381,
          4412,
          4439
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 450,
        "linearizedBaseContracts": [
          450,
          4265,
          4412,
          4439,
          4381,
          3126,
          3138,
          3069
        ],
        "name": "TierReward",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "191:2:7",
              "statements": []
            },
            "documentation": null,
            "id": 368,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "56796265205469657220526577617264",
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "161:18:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ec699e81333e4c1e7467212ee259e7f446c74c89119654e0434f076bf9aa899a",
                      "typeString": "literal_string \"Vybe Tier Reward\""
                    },
                    "value": "Vybe Tier Reward"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "524557415244",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "181:8:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0b9821ae606ebc7c79bf3390bdd3dc93e1b4a7cda27aad60646e7b88ff55b001",
                      "typeString": "literal_string \"REWARD\""
                    },
                    "value": "REWARD"
                  }
                ],
                "id": 365,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 362,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4265,
                  "src": "154:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$4265_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "154:36:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "144:2:7"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "191:0:7"
            },
            "scope": 450,
            "src": "133:60:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 372,
            "mutability": "mutable",
            "name": "_type",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 450,
            "src": "199:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 371,
              "keyType": {
                "id": 369,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "207:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "199:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 370,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "218:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 375,
            "mutability": "mutable",
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 450,
            "src": "247:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 373,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "265:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "324:126:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 382,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "334:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "344:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "354:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "344:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "334:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "334:21:7"
                },
                {
                  "assignments": [
                    389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 403,
                      "src": "365:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "365:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 390,
                    "name": "counter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 375,
                    "src": "379:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "365:21:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "397:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 394,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "403:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "397:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 395,
                      "name": "tier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "410:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "397:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "397:17:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "431:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "439:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4001,
                      "src": "425:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "425:18:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "287:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "tier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "303:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:30:7"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:7"
            },
            "scope": 450,
            "src": "273:177:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "491:27:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "507:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 409,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4069,
                      "src": "501:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "501:10:7"
                }
              ]
            },
            "documentation": null,
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 414,
                  "src": "470:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:13:7"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:7"
            },
            "scope": 450,
            "src": "456:62:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "596:229:7",
              "statements": [
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "tier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 448,
                      "src": "606:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "606:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 423,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "621:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 425,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "627:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "621:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "606:25:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 427,
                      "name": "tier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "646:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "654:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "646:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 433,
                        "name": "tier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "707:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "707:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 439,
                          "name": "tier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "766:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "774:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "766:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 445,
                      "nodeType": "IfStatement",
                      "src": "762:57:7",
                      "trueBody": {
                        "id": 444,
                        "nodeType": "Block",
                        "src": "777:42:7",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "706c6174696e756d",
                              "id": 442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "798:10:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7749953d30ad88f23f2f55efe2bcdfb045daa5bca71ff6e111ac0a86deea29e6",
                                "typeString": "literal_string \"platinum\""
                              },
                              "value": "platinum"
                            },
                            "functionReturnParameters": 420,
                            "id": 443,
                            "nodeType": "Return",
                            "src": "791:17:7"
                          }
                        ]
                      }
                    },
                    "id": 446,
                    "nodeType": "IfStatement",
                    "src": "703:116:7",
                    "trueBody": {
                      "id": 438,
                      "nodeType": "Block",
                      "src": "718:38:7",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "676f6c64",
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "739:6:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a827b848d338b362a9edc3f5d9143a504828207dd0d1d6515b2b3968154d59b0",
                              "typeString": "literal_string \"gold\""
                            },
                            "value": "gold"
                          },
                          "functionReturnParameters": 420,
                          "id": 437,
                          "nodeType": "Return",
                          "src": "732:13:7"
                        }
                      ]
                    }
                  },
                  "id": 447,
                  "nodeType": "IfStatement",
                  "src": "642:177:7",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "657:40:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "73696c766572",
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "678:8:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f941acc7a280b509da22820f4cfa02d757f6c3c7f9a8aa70c32c18152fa9a488",
                            "typeString": "literal_string \"silver\""
                          },
                          "value": "silver"
                        },
                        "functionReturnParameters": 420,
                        "id": 431,
                        "nodeType": "Return",
                        "src": "671:15:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f2577e2d",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardType",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 449,
                  "src": "547:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "546:13:7"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 449,
                  "src": "581:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "580:15:7"
            },
            "scope": 450,
            "src": "524:301:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 451,
        "src": "97:730:7"
      }
    ],
    "src": "0:860:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-11-09T15:57:02.010Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}